<button aria-label="Toggle theme" class="btn ps-lg-2 ps-0 pe-2 py-1" id="bd-theme" type="button">
  <i class="bi bi-moon-fill d-none" id="moon-icon"></i>
  <i class="bi bi-sun-fill" id="sun-icon"></i>
</button>

<script>
  const themeToggleBtn = document.getElementById('bd-theme')!;
  const htmlElement = document.documentElement;

  const getStoredTheme = () => localStorage.getItem('theme');
  const setStoredTheme = (theme: string) => localStorage.setItem('theme', theme);

  const getPreferredTheme = () => {
    const storedTheme = getStoredTheme();
    if (storedTheme) {
      return storedTheme;
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };

  const setTheme = (theme: string) => {
    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      htmlElement.setAttribute('data-bs-theme', 'dark');
    } else {
      htmlElement.setAttribute('data-bs-theme', theme);
    }
    // Add logic to show/hide icons based on theme
    const moonIcon = document.getElementById('moon-icon')!;
    const sunIcon = document.getElementById('sun-icon')!;
    if (theme === 'dark') {
      moonIcon.classList.remove('d-none');
      sunIcon.classList.add('d-none');
    } else {
      moonIcon.classList.add('d-none');
      sunIcon.classList.remove('d-none');
    }
  };

  setTheme(getPreferredTheme());

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
    const storedTheme = getStoredTheme();
    if (storedTheme !== 'light' && storedTheme !== 'dark') {
      setTheme(getPreferredTheme());
    }
  });

  themeToggleBtn.addEventListener('click', () => {
    const currentTheme = htmlElement.getAttribute('data-bs-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    setStoredTheme(newTheme);
    setTheme(newTheme);
  });
</script>
