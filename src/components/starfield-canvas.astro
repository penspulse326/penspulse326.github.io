---
// 銀河特效 - 產生隨機漂浮的白色光點
---

<canvas id="starfield-canvas"></canvas>

<style>
  #starfield-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
</style>

<script>
  const canvas = document.getElementById('starfield-canvas') as HTMLCanvasElement;
  const ctx = canvas.getContext('2d')!;

  // 星星類別
  class Star {
    fadeDirection: number;
    opacity: number;
    radius: number;
    vx: number;
    vy: number;
    x: number;
    y: number;

    constructor(canvasWidth: number, canvasHeight: number) {
      this.x = Math.random() * canvasWidth;
      this.y = Math.random() * canvasHeight;
      this.radius = Math.random() * 2 + 0.5; // 0.5 ~ 2.5px
      this.vx = (Math.random() - 0.5) * 0.3; // 水平速度
      this.vy = (Math.random() - 0.5) * 0.3; // 垂直速度
      this.opacity = Math.random();
      this.fadeDirection = Math.random() > 0.5 ? 1 : -1;
    }

    draw(ctx: CanvasRenderingContext2D) {
      ctx.beginPath();
      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
      ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
      ctx.fill();
    }

    update(canvasWidth: number, canvasHeight: number) {
      // 更新位置
      this.x += this.vx;
      this.y += this.vy;

      // 邊界檢測 - 從另一側重新出現
      if (this.x < 0) this.x = canvasWidth;
      if (this.x > canvasWidth) this.x = 0;
      if (this.y < 0) this.y = canvasHeight;
      if (this.y > canvasHeight) this.y = 0;

      // 閃爍效果
      this.opacity += this.fadeDirection * 0.01;

      if (this.opacity <= 0 || this.opacity >= 1) {
        this.fadeDirection *= -1;
      }
    }
  }

  let stars: Star[] = [];
  let animationId: number;

  function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    stars.forEach((star) => {
      star.update(canvas.width, canvas.height);
      star.draw(ctx);
    });

    animationId = requestAnimationFrame(animate);
  }

  function initCanvas() {
    // 設定 canvas 尺寸
    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    // 根據畫布大小決定星星數量
    const starCount = Math.floor((canvas.width * canvas.height) / 1000);
    stars = [];
    for (let i = 0; i < starCount; i++) {
      stars.push(new Star(canvas.width, canvas.height));
    }
  }

  // 初始化
  initCanvas();
  animate();
</script>
